<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        n/tUgYYAAAAASUVORK5CYII=
</value>
  </data>
</root>